# Projects
# uncomment the urls if you wish to display them, and add your own URL


- project: Never Again Party Game
  role: Founder & Primary Developer
  duration: May, 2020 &mdash; June, 2020
  url: "https://www.slightlydrunkapp.com"
  description: Developed an interactive card game using Xcode and Swift that dynamically changes via various card packs. Engineered a game strategy that is based upon a user’s life experience that may or may not have happened. Designed the game the game with a simple UI that follows a minimalistic approach using graphic design knowledge from past experience.


- project: Nostalgic Memories Youtube + Website
  role: Founder & Primary Developer
  duration: 2019 &mdash; Present
  url: "www.youtube.com/nostalgicmemorieshd"
  url: "www.nostalgicmemorieshd.com"
  description: Designed a website from the ground up by utilizing various skills such as HTML, CSS, PHP in order to create a Wordpress Theme. Encourages users to visit the website to be able to contact me in which people can send submission or request a type of song to be feature on my YouTube Channel. Improved communication between viewers and content creators by about 3% by giving them an easier access to find all the contact information. 

- project: Circuit Simulator
  role: Primary Developer
  duration: November, 2019 &mdash; December, 2019
#   url: "www.youtube.com/nostalgicmemorieshd"
#   url: "www.nostalgicmemorieshd.com"
  description: Developed a program in C that reads a file and build an electric circuit and return all the possible combination of a truth table. Helped teach students learn more in depth with circuits by teaching them about truth tables. 

- project: Polynomial, Expression Evaluator
  role: Primary Developer
  duration: March, 2019 &mdash; April, 2019
#   url: "www.youtube.com/nostalgicmemorieshd"
#   url: "www.nostalgicmemorieshd.com"
  description: Created a Java based project that sole purpose was to add two polynomial expressions together in an efficient algorithm. Utilized an arraylist data structure to dynamically allocate enough array space for each expression without any  penalty hit towards efficiency.
